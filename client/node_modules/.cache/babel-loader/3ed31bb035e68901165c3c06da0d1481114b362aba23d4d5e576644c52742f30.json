{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0\n  },\n  reducers: {\n    loadAllPost: () => {},\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","value","reducers","loadAllPost","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["D:/my-mock-app/client/src/store/user.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: {\r\n      value: 0,\r\n    },\r\n    reducers: {\r\n      loadAllPost:() => {\r\n\r\n      },\r\n      increment: (state) => {\r\n        // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n        // doesn't actually mutate the state because it uses the Immer library,\r\n        // which detects changes to a \"draft state\" and produces a brand new\r\n        // immutable state based off those changes\r\n        state.value += 1\r\n      },\r\n      decrement: (state) => {\r\n        state.value -= 1\r\n      },\r\n      incrementByAmount: (state, action) => {\r\n        state.value += action.payload\r\n      },\r\n    },\r\n  })\r\n  \r\n  // Action creators are generated for each case reducer function\r\n  export const { increment, decrement, incrementByAmount } = counterSlice.actions\r\n  \r\n  export default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAC,MAAM,CAElB,CAAC;IACDC,SAAS,EAAGC,KAAK,IAAK;MACpB;MACA;MACA;MACA;MACAA,KAAK,CAACJ,KAAK,IAAI,CAAC;IAClB,CAAC;IACDK,SAAS,EAAGD,KAAK,IAAK;MACpBA,KAAK,CAACJ,KAAK,IAAI,CAAC;IAClB,CAAC;IACDM,iBAAiB,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MACpCH,KAAK,CAACJ,KAAK,IAAIO,MAAM,CAACC,OAAO;IAC/B;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEL,SAAS;EAAEE,SAAS;EAAEC;AAAkB,CAAC,GAAGT,YAAY,CAACY,OAAO;AAE/E,eAAeZ,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}