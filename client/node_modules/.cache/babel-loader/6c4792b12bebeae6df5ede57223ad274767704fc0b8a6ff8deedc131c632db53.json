{"ast":null,"code":"import { takeLatest, put, call, fork } from 'redux-saga/effects';\nimport post, { getAllPost, setAllPost } from './post';\nimport { getAllPostDetails } from '../api/index';\nfunction loadAllPostAsync(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    try {\n      const postName = payload;\n      const response = yield call(getAllPostDetails, postName);\n      if (response.status === 200) {\n        console.log(response.status, response);\n        // yield put(setAllPost({...response.data.data}));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }();\n}\nfunction* loadAllPost() {\n  yield takeLatest(getAllPost.type, loadAllPostAsync);\n}\nexport const postSaga = [fork(loadAllPost)];","map":{"version":3,"names":["takeLatest","put","call","fork","post","getAllPost","setAllPost","getAllPostDetails","loadAllPostAsync","payload","postName","response","status","console","log","error","loadAllPost","type","postSaga"],"sources":["D:/my-mock-app/client/src/store/postSaga.js"],"sourcesContent":["import { takeLatest,put,call,fork } from 'redux-saga/effects';\r\nimport post, { getAllPost, setAllPost } from './post';\r\nimport { getAllPostDetails } from '../api/index'\r\n\r\n\r\nfunction* loadAllPostAsync({payload}) {\r\n\r\n    try{\r\n\r\n        const postName = payload;\r\n        const response = yield call(getAllPostDetails,postName);\r\n        \r\n        if(response.status === 200)  {\r\n            console.log(response.status,response);\r\n           // yield put(setAllPost({...response.data.data}));\r\n        }\r\n\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nfunction* loadAllPost(){\r\n    yield takeLatest(getAllPost.type,loadAllPostAsync);\r\n}\r\n\r\nexport const postSaga = [fork(loadAllPost)];"],"mappings":"AAAA,SAASA,UAAU,EAACC,GAAG,EAACC,IAAI,EAACC,IAAI,QAAQ,oBAAoB;AAC7D,OAAOC,IAAI,IAAIC,UAAU,EAAEC,UAAU,QAAQ,QAAQ;AACrD,SAASC,iBAAiB,QAAQ,cAAc;AAGhD,SAAUC,gBAAgB;EAAA,IAAC;IAACC;EAAO,CAAC;EAAA,oBAAE;IAElC,IAAG;MAEC,MAAMC,QAAQ,GAAGD,OAAO;MACxB,MAAME,QAAQ,GAAG,MAAMT,IAAI,CAACK,iBAAiB,EAACG,QAAQ,CAAC;MAEvD,IAAGC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAG;QACzBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,MAAM,EAACD,QAAQ,CAAC;QACtC;MACH;IAEJ,CAAC,QAAMI,KAAK,EAAC;MACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACtB;EACJ,CAAC;AAAA;AAED,UAAUC,WAAW,GAAE;EACnB,MAAMhB,UAAU,CAACK,UAAU,CAACY,IAAI,EAACT,gBAAgB,CAAC;AACtD;AAEA,OAAO,MAAMU,QAAQ,GAAG,CAACf,IAAI,CAACa,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}